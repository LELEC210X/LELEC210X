// fir_tb_gen_tb.v

// Generated using ACDS version 18.1 625

`timescale 1 ps / 1 ps
module fir_tb_gen_tb (
	);

	wire         fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_source_valid;       // fir_tb_gen_inst:fir_compiler_ii_0_avalon_streaming_source_valid -> fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_source_bfm:sink_valid
	wire  [23:0] fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_source_data;        // fir_tb_gen_inst:fir_compiler_ii_0_avalon_streaming_source_data -> fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_source_bfm:sink_data
	wire   [1:0] fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_source_error;       // fir_tb_gen_inst:fir_compiler_ii_0_avalon_streaming_source_error -> fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_source_bfm:sink_error
	wire   [0:0] fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_sink_bfm_src_valid; // fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_sink_bfm:src_valid -> fir_tb_gen_inst:fir_compiler_ii_0_avalon_streaming_sink_valid
	wire  [23:0] fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_sink_bfm_src_data;  // fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_sink_bfm:src_data -> fir_tb_gen_inst:fir_compiler_ii_0_avalon_streaming_sink_data
	wire   [1:0] fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_sink_bfm_src_error; // fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_sink_bfm:src_error -> fir_tb_gen_inst:fir_compiler_ii_0_avalon_streaming_sink_error
	wire         fir_tb_gen_inst_clk_bfm_clk_clk;                                       // fir_tb_gen_inst_clk_bfm:clk -> [fir_tb_gen_inst:clk_clk, fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_sink_bfm:clk, fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_source_bfm:clk, fir_tb_gen_inst_reset_bfm:clk]
	wire         fir_tb_gen_inst_reset_bfm_reset_reset;                                 // fir_tb_gen_inst_reset_bfm:reset -> [fir_tb_gen_inst:reset_reset_n, fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_sink_bfm:reset, fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_source_bfm:reset]

	fir_tb_gen fir_tb_gen_inst (
		.clk_clk                                         (fir_tb_gen_inst_clk_bfm_clk_clk),                                       //                                       clk.clk
		.fir_compiler_ii_0_avalon_streaming_sink_data    (fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_sink_bfm_src_data),  //   fir_compiler_ii_0_avalon_streaming_sink.data
		.fir_compiler_ii_0_avalon_streaming_sink_valid   (fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_sink_bfm_src_valid), //                                          .valid
		.fir_compiler_ii_0_avalon_streaming_sink_error   (fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_sink_bfm_src_error), //                                          .error
		.fir_compiler_ii_0_avalon_streaming_source_data  (fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_source_data),        // fir_compiler_ii_0_avalon_streaming_source.data
		.fir_compiler_ii_0_avalon_streaming_source_valid (fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_source_valid),       //                                          .valid
		.fir_compiler_ii_0_avalon_streaming_source_error (fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_source_error),       //                                          .error
		.reset_reset_n                                   (fir_tb_gen_inst_reset_bfm_reset_reset)                                  //                                     reset.reset_n
	);

	altera_avalon_clock_source #(
		.CLOCK_RATE (125000000),
		.CLOCK_UNIT (1)
	) fir_tb_gen_inst_clk_bfm (
		.clk (fir_tb_gen_inst_clk_bfm_clk_clk)  // clk.clk
	);

	altera_avalon_st_source_bfm #(
		.USE_PACKET       (0),
		.USE_CHANNEL      (0),
		.USE_ERROR        (1),
		.USE_READY        (0),
		.USE_VALID        (1),
		.USE_EMPTY        (0),
		.ST_SYMBOL_W      (12),
		.ST_NUMSYMBOLS    (2),
		.ST_CHANNEL_W     (1),
		.ST_ERROR_W       (2),
		.ST_EMPTY_W       (1),
		.ST_READY_LATENCY (0),
		.ST_BEATSPERCYCLE (1),
		.ST_MAX_CHANNELS  (0),
		.VHDL_ID          (0)
	) fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_sink_bfm (
		.clk               (fir_tb_gen_inst_clk_bfm_clk_clk),                                       //       clk.clk
		.reset             (~fir_tb_gen_inst_reset_bfm_reset_reset),                                // clk_reset.reset
		.src_data          (fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_sink_bfm_src_data),  //       src.data
		.src_valid         (fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_sink_bfm_src_valid), //          .valid
		.src_error         (fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_sink_bfm_src_error), //          .error
		.src_ready         (1'b1),                                                                  // (terminated)
		.src_startofpacket (),                                                                      // (terminated)
		.src_endofpacket   (),                                                                      // (terminated)
		.src_empty         (),                                                                      // (terminated)
		.src_channel       ()                                                                       // (terminated)
	);

	altera_avalon_st_sink_bfm #(
		.USE_PACKET       (0),
		.USE_CHANNEL      (0),
		.USE_ERROR        (1),
		.USE_READY        (0),
		.USE_VALID        (1),
		.USE_EMPTY        (0),
		.ST_SYMBOL_W      (12),
		.ST_NUMSYMBOLS    (2),
		.ST_CHANNEL_W     (1),
		.ST_ERROR_W       (2),
		.ST_EMPTY_W       (1),
		.ST_READY_LATENCY (0),
		.ST_BEATSPERCYCLE (1),
		.ST_MAX_CHANNELS  (0),
		.VHDL_ID          (0)
	) fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_source_bfm (
		.clk                (fir_tb_gen_inst_clk_bfm_clk_clk),                                 //       clk.clk
		.reset              (~fir_tb_gen_inst_reset_bfm_reset_reset),                          // clk_reset.reset
		.sink_data          (fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_source_data),  //      sink.data
		.sink_valid         (fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_source_valid), //          .valid
		.sink_error         (fir_tb_gen_inst_fir_compiler_ii_0_avalon_streaming_source_error), //          .error
		.sink_ready         (),                                                                // (terminated)
		.sink_startofpacket (1'b0),                                                            // (terminated)
		.sink_endofpacket   (1'b0),                                                            // (terminated)
		.sink_empty         (1'b0),                                                            // (terminated)
		.sink_channel       (1'b0)                                                             // (terminated)
	);

	altera_avalon_reset_source #(
		.ASSERT_HIGH_RESET    (0),
		.INITIAL_RESET_CYCLES (50)
	) fir_tb_gen_inst_reset_bfm (
		.reset (fir_tb_gen_inst_reset_bfm_reset_reset), // reset.reset_n
		.clk   (fir_tb_gen_inst_clk_bfm_clk_clk)        //   clk.clk
	);

endmodule
